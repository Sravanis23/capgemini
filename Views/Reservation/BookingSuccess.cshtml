@model RailwayReservationMVC.Models.ViewModels.BookingSuccessViewModel

<h2>Booking Successful!</h2>

<p>Your PNR: <strong>@Model.PNRNo</strong></p>
<p>Train Name: <strong>@Model.TrainName</strong></p>
<p>Journey Date: <strong>@Model.JourneyDate.ToString("dd/MM/yyyy")</strong></p>
<p>Class Type: <strong>@Model.ClassType</strong></p>
<p>Seats Booked: <strong>@Model.SeatsBooked</strong></p>
<p>Email: <strong>@Model.Email</strong></p>

<h3>Passenger Details:</h3>
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Age</th>
            <th>Gender</th>
            <th>Passenger Type</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Passengers != null && Model.Passengers.Any())
        {
            @foreach (var passenger in Model.Passengers)
            {
                <tr>
                    <td>@passenger.Name</td>
                    <td>@passenger.Age</td>
                    <td>@passenger.Gender</td>
                    <td>@passenger.PassengerType</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4" class="text-center">No passengers found.</td>
            </tr>
        }
    </tbody>
</table>

<form asp-action="Cancel" asp-controller="Reservation" method="post">
    <input type="hidden" name="pnrNo" value="@Model.PNRNo" />
    <button type="submit" class="btn btn-danger">Cancel Ticket</button>
</form>

<p>A confirmation email has been sent to: <strong>@Model.Email</strong></p>

<!-- Book another ticket link (Removed trainId as it's not in ViewModel) -->
<a href="@Url.Action("Book", "Reservation")" class="btn btn-secondary">Book Another Ticket</a>



<a href="/" class="btn btn-primary">Go to Home</a>
